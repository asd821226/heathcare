<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.PersonPaymentMapper">

	<resultMap id="personPaymentResultMap" type="com.glaf.heathcare.domain.PersonPayment">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="gradeId" column="GRADEID_" jdbcType="VARCHAR" />
		<result property="personId" column="PERSONID_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="money" column="MONEY_" jdbcType="DOUBLE" />
		<result property="payTime" column="PAYTIME_" jdbcType="TIMESTAMP" />
		<result property="semester" column="SEMESTER_" jdbcType="INTEGER" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="remark" column="REMARK_" jdbcType="VARCHAR" />
		<result property="businessStatus" column="BUSINESSSTATUS_"
			jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="confirmBy" column="CONFIRMBY_" jdbcType="VARCHAR" />
		<result property="confirmTime" column="CONFIRMTIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertPersonPayment" parameterType="com.glaf.heathcare.domain.PersonPayment">
		insert into HEALTH_PERSON_PAYMENT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="gradeId != null">
				,GRADEID_
			</if>
			<if test="personId != null">
				,PERSONID_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="money != null">
				,MONEY_
			</if>
			<if test="payTime != null">
				,PAYTIME_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="remark != null">
				,REMARK_
			</if>
			<if test="businessStatus != null">
				,BUSINESSSTATUS_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="confirmBy != null">
				,CONFIRMBY_
			</if>
			<if test="confirmTime != null">
				,CONFIRMTIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="gradeId != null">
				,#{gradeId, jdbcType=VARCHAR}
			</if>
			<if test="personId != null">
				,#{personId, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="money != null">
				,#{money, jdbcType=DOUBLE}
			</if>
			<if test="payTime != null">
				,#{payTime, jdbcType=TIMESTAMP}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="businessStatus != null">
				,#{businessStatus, jdbcType=INTEGER}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="confirmBy != null">
				,#{confirmBy, jdbcType=VARCHAR}
			</if>
			<if test="confirmTime != null">
				,#{confirmTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertPersonPayment" parameterType="java.util.List">
		insert into HEALTH_PERSON_PAYMENT (
		ID_
		,TENANTID_
		,GRADEID_
		,PERSONID_
		,TYPE_
		,MONEY_
		,PAYTIME_
		,SEMESTER_
		,YEAR_
		,MONTH_
		,REMARK_
		,BUSINESSSTATUS_
		,CREATEBY_
		,CREATETIME_
		,CONFIRMBY_
		,CONFIRMTIME_
		,UPDATEBY_
		,UPDATETIME_
		)
		values
		<foreach collection="list" item="personPayment" index="index"
			separator=",">
			(
			#{personPayment.id, jdbcType=VARCHAR}
			,#{personPayment.tenantId, jdbcType=VARCHAR}
			,#{personPayment.gradeId, jdbcType=VARCHAR}
			,#{personPayment.personId, jdbcType=VARCHAR}
			,#{personPayment.type,
			jdbcType=VARCHAR}
			,#{personPayment.money, jdbcType=DOUBLE}
			,#{personPayment.payTime, jdbcType=TIMESTAMP}
			,#{personPayment.semester, jdbcType=INTEGER}
			,#{personPayment.year,
			jdbcType=INTEGER}
			,#{personPayment.month, jdbcType=INTEGER}
			,#{personPayment.remark, jdbcType=VARCHAR}
			,#{personPayment.businessStatus, jdbcType=INTEGER}
			,#{personPayment.createBy, jdbcType=VARCHAR}
			,#{personPayment.createTime, jdbcType=TIMESTAMP}
			,#{personPayment.confirmBy, jdbcType=VARCHAR}
			,#{personPayment.confirmTime, jdbcType=TIMESTAMP}
			,#{personPayment.updateBy, jdbcType=VARCHAR}
			,#{personPayment.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertPersonPayment_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="personPayment" index="index">
			insert
			into HEALTH_PERSON_PAYMENT (
			ID_
			,TENANTID_
			,GRADEID_
			,PERSONID_
			,TYPE_
			,MONEY_
			,PAYTIME_
			,SEMESTER_
			,YEAR_
			,MONTH_
			,REMARK_
			,BUSINESSSTATUS_
			,CREATEBY_
			,CREATETIME_
			,CONFIRMBY_
			,CONFIRMTIME_
			,UPDATEBY_
			,UPDATETIME_
			) values (
			#{personPayment.id, jdbcType=VARCHAR}
			,#{personPayment.tenantId, jdbcType=VARCHAR}
			,#{personPayment.gradeId, jdbcType=VARCHAR}
			,#{personPayment.personId, jdbcType=VARCHAR}
			,#{personPayment.type,
			jdbcType=VARCHAR}
			,#{personPayment.money, jdbcType=DOUBLE}
			,#{personPayment.payTime, jdbcType=TIMESTAMP}
			,#{personPayment.semester, jdbcType=INTEGER}
			,#{personPayment.year,
			jdbcType=INTEGER}
			,#{personPayment.month, jdbcType=INTEGER}
			,#{personPayment.remark, jdbcType=VARCHAR}
			,#{personPayment.businessStatus, jdbcType=INTEGER}
			,#{personPayment.createBy, jdbcType=VARCHAR}
			,#{personPayment.createTime, jdbcType=TIMESTAMP}
			,#{personPayment.confirmBy, jdbcType=VARCHAR}
			,#{personPayment.confirmTime, jdbcType=TIMESTAMP}
			,#{personPayment.updateBy, jdbcType=VARCHAR}
			,#{personPayment.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updatePersonPayment" parameterType="com.glaf.heathcare.domain.PersonPayment">
		update HEALTH_PERSON_PAYMENT
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="money != null">
				MONEY_ = #{money, jdbcType=DOUBLE},
			</if>
			<if test="payTime != null">
				PAYTIME_ = #{payTime, jdbcType=TIMESTAMP},
			</if>
			<if test="semester != null">
				SEMESTER_ = #{semester, jdbcType=INTEGER},
			</if>
			<if test="year != null">
				YEAR_ = #{year, jdbcType=INTEGER},
			</if>
			<if test="month != null">
				MONTH_ = #{month, jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				REMARK_ = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="businessStatus != null">
				BUSINESSSTATUS_ = #{businessStatus, jdbcType=INTEGER},
			</if>
			<if test="confirmBy != null">
				CONFIRMBY_ = #{confirmBy, jdbcType=VARCHAR},
			</if>
			<if test="confirmTime != null">
				CONFIRMTIME_ = #{confirmTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<update id="updatePersonPaymentStatus" parameterType="com.glaf.heathcare.domain.PersonPayment">

		update HEALTH_PERSON_PAYMENT
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="businessStatus != null">
				BUSINESSSTATUS_ = #{businessStatus, jdbcType=INTEGER},
			</if>
			<if test="confirmBy != null">
				CONFIRMBY_ = #{confirmBy, jdbcType=VARCHAR},
			</if>
			<if test="confirmTime != null">
				CONFIRMTIME_ = #{confirmTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deletePersonPaymentById" parameterType="string">
		delete from
		HEALTH_PERSON_PAYMENT
		where ID_ = #{id}
	</delete>


	<select id="getPersonPaymentById" parameterType="string"
		resultMap="personPaymentResultMap">
		select * from HEALTH_PERSON_PAYMENT where ID_ = #{id}
	</select>


	<select id="getPersonPayments" parameterType="com.glaf.heathcare.query.PersonPaymentQuery"
		resultMap="personPaymentResultMap">
		select distinct E.*
		<include refid="selectPersonPaymentsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.CREATETIME_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getPersonPaymentCount" parameterType="com.glaf.heathcare.query.PersonPaymentQuery"
		resultType="int">
		select count(*)
		<include refid="selectPersonPaymentsSql" />
	</select>


	<sql id="selectPersonPaymentsSql">

		from HEALTH_PERSON_PAYMENT E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="gradeId != null and gradeId != '' ">
				and E.GRADEID_ = #{gradeId}
			</if>

			<if test="gradeIds != null and gradeIds.size() &gt; 0">
				and E.GRADEID_ IN
				<foreach item="x_gradeId" index="index" collection="gradeIds"
					open="(" separator="," close=")">
					#{x_gradeId}
				</foreach>
			</if>

			<if test="personId != null and personId != '' ">
				and E.PERSONID_ = #{personId}
			</if>

			<if test="personIds != null and personIds.size() &gt; 0">
				and E.PERSONID_ IN
				<foreach item="x_personId" index="index" collection="personIds"
					open="(" separator="," close=")">
					#{x_personId}
				</foreach>
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK_ like #{remarkLike}
			</if>

			<if test="businessStatus != null">
				and E.BUSINESSSTATUS_ = #{businessStatus}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>