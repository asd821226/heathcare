<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.glaf.heathcare.mapper.GradePersonRelationMapper">

	<resultMap id="gradePersonRelationResultMap"
		type="com.glaf.heathcare.domain.GradePersonRelation">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="tenantId" column="TENANTID_"
			jdbcType="VARCHAR" />
		<result property="gradeId" column="GRADEID_" jdbcType="VARCHAR" />
		<result property="personId" column="PERSONID_"
			jdbcType="VARCHAR" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="sex" column="SEX_" jdbcType="VARCHAR" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="semester" column="SEMESTER_"
			jdbcType="INTEGER" />
		<result property="sortNo" column="SORTNO_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_"
			jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_"
			jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertGradePersonRelation"
		parameterType="com.glaf.heathcare.domain.GradePersonRelation">
		insert into HEALTH_GRADE_PERSON_RELATION
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="gradeId != null">
				,GRADEID_
			</if>
			<if test="personId != null">
				,PERSONID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="sex != null">
				,SEX_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="sortNo != null">
				,SORTNO_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="gradeId != null">
				,#{gradeId, jdbcType=VARCHAR}
			</if>
			<if test="personId != null">
				,#{personId, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="sex != null">
				,#{sex, jdbcType=VARCHAR}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="sortNo != null">
				,#{sortNo, jdbcType=INTEGER}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertGradePersonRelation"
		parameterType="java.util.List">
		insert into HEALTH_GRADE_PERSON_RELATION (
		ID_
		,TENANTID_
		,GRADEID_
		,PERSONID_
		,NAME_
		,SEX_
		,YEAR_
		,MONTH_
		,SEMESTER_
		,SORTNO_
		,CREATEBY_
		,CREATETIME_
		) values
		<foreach collection="list" item="gradePersonRelation"
			index="index" separator=",">
			(
			#{gradePersonRelation.id, jdbcType=VARCHAR}
			,#{gradePersonRelation.tenantId, jdbcType=VARCHAR}
			,#{gradePersonRelation.gradeId, jdbcType=VARCHAR}
			,#{gradePersonRelation.personId, jdbcType=VARCHAR}
			,#{gradePersonRelation.name, jdbcType=VARCHAR}
			,#{gradePersonRelation.sex, jdbcType=VARCHAR}
			,#{gradePersonRelation.year, jdbcType=INTEGER}
			,#{gradePersonRelation.month, jdbcType=INTEGER}
			,#{gradePersonRelation.semester, jdbcType=INTEGER}
			,#{gradePersonRelation.sortNo, jdbcType=INTEGER}
			,#{gradePersonRelation.createBy, jdbcType=VARCHAR}
			,#{gradePersonRelation.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertGradePersonRelation_oracle"
		parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="gradePersonRelation"
			index="index">
			insert into HEALTH_GRADE_PERSON_RELATION (
			ID_
			,TENANTID_
			,GRADEID_
			,PERSONID_
			,NAME_
			,SEX_
			,YEAR_
			,MONTH_
			,SEMESTER_
			,SORTNO_
			,CREATEBY_
			,CREATETIME_
			) values (
			#{gradePersonRelation.id, jdbcType=VARCHAR}
			,#{gradePersonRelation.tenantId, jdbcType=VARCHAR}
			,#{gradePersonRelation.gradeId, jdbcType=VARCHAR}
			,#{gradePersonRelation.personId, jdbcType=VARCHAR}
			,#{gradePersonRelation.name, jdbcType=VARCHAR}
			,#{gradePersonRelation.sex, jdbcType=VARCHAR}
			,#{gradePersonRelation.year, jdbcType=INTEGER}
			,#{gradePersonRelation.month, jdbcType=INTEGER}
			,#{gradePersonRelation.semester, jdbcType=INTEGER}
			,#{gradePersonRelation.sortNo, jdbcType=INTEGER}
			,#{gradePersonRelation.createBy, jdbcType=VARCHAR}
			,#{gradePersonRelation.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateGradePersonRelation"
		parameterType="com.glaf.heathcare.domain.GradePersonRelation">
		update HEALTH_GRADE_PERSON_RELATION
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="tenantId != null">
				TENANTID_ = #{tenantId, jdbcType=VARCHAR},
			</if>
			<if test="gradeId != null">
				GRADEID_ = #{gradeId, jdbcType=VARCHAR},
			</if>
			<if test="personId != null">
				PERSONID_ = #{personId, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				SEX_ = #{sex, jdbcType=VARCHAR},
			</if>
			<if test="year != null">
				YEAR_ = #{year, jdbcType=INTEGER},
			</if>
			<if test="month != null">
				MONTH_ = #{month, jdbcType=INTEGER},
			</if>
			<if test="semester != null">
				SEMESTER_ = #{semester, jdbcType=INTEGER},
			</if>
			<if test="sortNo != null">
				SORTNO_ = #{sortNo, jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME_ = #{createTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteGradePersonRelationById"
		parameterType="string">
		delete from HEALTH_GRADE_PERSON_RELATION
		where ID_ =
		#{id}
	</delete>


	<delete id="deleteGradePersonRelations"
		parameterType="com.glaf.heathcare.query.GradePersonRelationQuery">

		delete from HEALTH_GRADE_PERSON_RELATION
		where TENANTID_
		= #{tenantId}
		and GRADEID_ = #{gradeId}
		and YEAR_ = #{year}
		<if test="month != null">
			and MONTH_ = #{month}
		</if>
		<if test="semester != null">
			and SEMESTER_ = #{semester}
		</if>
	</delete>


	<select id="selectGradePersonRelationCountGroupByGrade"
		resultType="com.glaf.heathcare.domain.GradePersonRelation"
		parameterType="com.glaf.heathcare.query.GradePersonRelationQuery">

		select GRADEID_ as gradeId, count(*) as count from
		HEALTH_GRADE_PERSON_RELATION
		where TENANTID_= #{tenantId}
		and YEAR_ = #{year}
		<if test="month != null">
			and MONTH_ = #{month}
		</if>
		<if test="semester != null">
			and SEMESTER_ = #{semester}
		</if>
		group by GRADEID_

	</select>
	
	
	<select id="selectGradePersonRelationCountGroupBySex"
		resultType="com.glaf.heathcare.domain.GradePersonRelation"
		parameterType="com.glaf.heathcare.query.GradePersonRelationQuery">

		select GRADEID_ as gradeId, SEX_ as sex, count(*) as count from
		HEALTH_GRADE_PERSON_RELATION
		where TENANTID_= #{tenantId}
		and YEAR_ = #{year}
		<if test="month != null">
			and MONTH_ = #{month}
		</if>
		<if test="semester != null">
			and SEMESTER_ = #{semester}
		</if>
		group by GRADEID_, SEX_

	</select>


	<select id="getGradePersonRelationById" parameterType="string"
		resultMap="gradePersonRelationResultMap">
		select * from HEALTH_GRADE_PERSON_RELATION where ID_ = #{id}
	</select>


	<select id="getGradePersonRelations"
		parameterType="com.glaf.heathcare.query.GradePersonRelationQuery"
		resultMap="gradePersonRelationResultMap">
		select distinct E.*
		<include refid="selectGradePersonRelationsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getGradePersonRelationCount"
		parameterType="com.glaf.heathcare.query.GradePersonRelationQuery"
		resultType="int">
		select count(*)
		<include refid="selectGradePersonRelationsSql" />
	</select>


	<sql id="selectGradePersonRelationsSql">

		from HEALTH_GRADE_PERSON_RELATION E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="gradeId != null and gradeId != '' ">
				and E.GRADEID_ = #{gradeId}
			</if>

			<if test="gradeIds != null and gradeIds.size() &gt; 0">
				and E.GRADEID_ IN
				<foreach item="x_gradeId" index="index"
					collection="gradeIds" open="(" separator="," close=")">
					#{x_gradeId}
				</foreach>
			</if>
			
			<if test="sex != null and sex != '' ">
				and E.SEX_ = #{sex}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="yearGreaterThanOrEqual != null">
				and E.YEAR_ &gt;= #{yearGreaterThanOrEqual}
			</if>

			<if test="yearLessThanOrEqual != null">
				and E.YEAR_ &lt;= #{yearLessThanOrEqual}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="monthGreaterThanOrEqual != null">
				and E.MONTH_ &gt;= #{monthGreaterThanOrEqual}
			</if>

			<if test="monthLessThanOrEqual != null">
				and E.MONTH_ &lt;= #{monthLessThanOrEqual}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>