<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.MealFeeCountMapper">

	<resultMap id="mealFeeCountResultMap" type="com.glaf.heathcare.domain.MealFeeCount">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="value" column="VALUE_" jdbcType="DOUBLE" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="semester" column="SEMESTER_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertMealFeeCount" parameterType="com.glaf.heathcare.domain.MealFeeCount">
		insert into HEALTH_MEAL_FEE_COUNT${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="value != null">
				,VALUE_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="value != null">
				,#{value, jdbcType=DOUBLE}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertMealFeeCount" parameterType="com.glaf.core.base.ListModel">
		insert into HEALTH_MEAL_FEE_COUNT${tableSuffix} (
		ID_
		,TENANTID_
		,NAME_
		,VALUE_
		,TYPE_
		,YEAR_
		,SEMESTER_
		,MONTH_
		,CREATETIME_
		) values
		<foreach collection="list" item="mealFeeCount" index="index"
			separator=",">
			(
			#{mealFeeCount.id, jdbcType=BIGINT}
			,#{mealFeeCount.tenantId, jdbcType=VARCHAR}
			,#{mealFeeCount.name,
			jdbcType=VARCHAR}
			,#{mealFeeCount.value, jdbcType=DOUBLE}
			,#{mealFeeCount.type, jdbcType=VARCHAR}
			,#{mealFeeCount.year,
			jdbcType=INTEGER}
			,#{mealFeeCount.semester, jdbcType=INTEGER}
			,#{mealFeeCount.month, jdbcType=INTEGER}
			,#{mealFeeCount.createTime,
			jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertMealFeeCount_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="mealFeeCount" index="index">
			insert
			into HEALTH_MEAL_FEE_COUNT${tableSuffix} (
			ID_
			,TENANTID_
			,NAME_
			,VALUE_
			,TYPE_
			,YEAR_
			,SEMESTER_
			,MONTH_
			,CREATETIME_
			) values (
			#{mealFeeCount.id,
			jdbcType=BIGINT}
			,#{mealFeeCount.tenantId,
			jdbcType=VARCHAR}
			,#{mealFeeCount.name, jdbcType=VARCHAR}
			,#{mealFeeCount.value,
			jdbcType=DOUBLE}
			,#{mealFeeCount.type,
			jdbcType=VARCHAR}
			,#{mealFeeCount.year, jdbcType=INTEGER}
			,#{mealFeeCount.semester,
			jdbcType=INTEGER}
			,#{mealFeeCount.month,
			jdbcType=INTEGER}
			,#{mealFeeCount.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateMealFeeCount" parameterType="com.glaf.heathcare.domain.MealFeeCount">
		update HEALTH_MEAL_FEE_COUNT${tableSuffix}
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="tenantId != null">
				TENANTID_ = #{tenantId, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				VALUE_ = #{value, jdbcType=DOUBLE},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="year != null">
				YEAR_ = #{year, jdbcType=INTEGER},
			</if>
			<if test="semester != null">
				SEMESTER_ = #{semester, jdbcType=INTEGER},
			</if>
			<if test="month != null">
				MONTH_ = #{month, jdbcType=INTEGER},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteMealFeeCountById" parameterType="com.glaf.heathcare.query.MealFeeCountQuery">
		delete from
		HEALTH_MEAL_FEE_COUNT${tableSuffix}
		where ID_ = #{id}
		and TENANTID_ =
		#{tenantId}
	</delete>


	<delete id="deleteMealFeeCount" parameterType="com.glaf.heathcare.query.MealFeeCountQuery">
		delete from
		HEALTH_MEAL_FEE_COUNT${tableSuffix}
		where TENANTID_ = #{tenantId}
		and
		YEAR_ = #{year}
		and MONTH_ = #{month}
		and TYPE_ = #{type}
	</delete>


	<select id="getMealFeeCountById" parameterType="com.glaf.heathcare.query.MealFeeCountQuery"
		resultMap="mealFeeCountResultMap">
		select * from HEALTH_MEAL_FEE_COUNT${tableSuffix} where ID_
		= #{id} and TENANTID_ = #{tenantId}
	</select>


	<select id="getMealFeeCounts" parameterType="com.glaf.heathcare.query.MealFeeCountQuery"
		resultMap="mealFeeCountResultMap">
		select distinct E.*
		<include refid="selectMealFeeCountsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getMealFeeCountCount" parameterType="com.glaf.heathcare.query.MealFeeCountQuery"
		resultType="int">
		select count(*)
		<include refid="selectMealFeeCountsSql" />
	</select>


	<sql id="selectMealFeeCountsSql">

		from HEALTH_MEAL_FEE_COUNT${tableSuffix} E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="typeLike != null and typeLike != '' ">
				and E.TYPE_ like #{typeLike}
			</if>

			<if test="types != null and types.size() &gt; 0">
				and E.TYPE_ IN
				<foreach item="x_type" index="index" collection="types"
					open="(" separator="," close=")">
					#{x_type}
				</foreach>
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>