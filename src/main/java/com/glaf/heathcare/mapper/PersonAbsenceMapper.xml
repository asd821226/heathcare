<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.PersonAbsenceMapper">

	<resultMap id="personAbsenceResultMap" type="com.glaf.heathcare.domain.PersonAbsence">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="gradeId" column="GRADEID_" jdbcType="VARCHAR" />
		<result property="personId" column="PERSONID_" jdbcType="VARCHAR" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="day" column="DAY_" jdbcType="INTEGER" />
		<result property="section" column="SECTION_" jdbcType="VARCHAR" />
		<result property="status" column="STATUS_" jdbcType="INTEGER" />
		<result property="remark" column="REMARK_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertPersonAbsence" parameterType="com.glaf.heathcare.domain.PersonAbsence">
		insert into HEALTH_PERSON_ABSENCE${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="gradeId != null">
				,GRADEID_
			</if>
			<if test="personId != null">
				,PERSONID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="day != null">
				,DAY_
			</if>
			<if test="section != null">
				,SECTION_
			</if>
			<if test="status != null">
				,STATUS_
			</if>
			<if test="remark != null">
				,REMARK_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="gradeId != null">
				,#{gradeId, jdbcType=VARCHAR}
			</if>
			<if test="personId != null">
				,#{personId, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="day != null">
				,#{day, jdbcType=INTEGER}
			</if>
			<if test="section != null">
				,#{section, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertPersonAbsence" parameterType="com.glaf.core.base.ListModel">
		insert into HEALTH_PERSON_ABSENCE${tableSuffix} (
		ID_
		,TENANTID_
		,GRADEID_
		,PERSONID_
		,NAME_
		,YEAR_
		,MONTH_
		,DAY_
		,SECTION_
		,STATUS_
		,REMARK_
		,CREATEBY_
		,CREATETIME_
		) values
		<foreach collection="list" item="personAbsence" index="index"
			separator=",">
			(
			#{personAbsence.id, jdbcType=VARCHAR}
			,#{personAbsence.tenantId, jdbcType=VARCHAR}
			,#{personAbsence.gradeId, jdbcType=VARCHAR}
			,#{personAbsence.personId, jdbcType=VARCHAR}
			,#{personAbsence.name,
			jdbcType=VARCHAR}
			,#{personAbsence.year, jdbcType=INTEGER}
			,#{personAbsence.month, jdbcType=INTEGER}
			,#{personAbsence.day,
			jdbcType=INTEGER}
			,#{personAbsence.section, jdbcType=VARCHAR}
			,#{personAbsence.status,
			jdbcType=INTEGER}
			,#{personAbsence.remark,
			jdbcType=VARCHAR}
			,#{personAbsence.createBy, jdbcType=VARCHAR}
			,#{personAbsence.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertPersonAbsence_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="personAbsence" index="index">
			insert
			into HEALTH_PERSON_ABSENCE${tableSuffix} (
			ID_
			,TENANTID_
			,GRADEID_
			,PERSONID_
			,NAME_
			,YEAR_
			,MONTH_
			,DAY_
			,SECTION_
			,STATUS_
			,REMARK_
			,CREATEBY_
			,CREATETIME_
			) values (
			#{personAbsence.id, jdbcType=VARCHAR}
			,#{personAbsence.tenantId,
			jdbcType=VARCHAR}
			,#{personAbsence.gradeId,
			jdbcType=VARCHAR}
			,#{personAbsence.personId, jdbcType=VARCHAR}
			,#{personAbsence.name,
			jdbcType=VARCHAR}
			,#{personAbsence.year,
			jdbcType=INTEGER}
			,#{personAbsence.month, jdbcType=INTEGER}
			,#{personAbsence.day,
			jdbcType=INTEGER}
			,#{personAbsence.section,
			jdbcType=VARCHAR}
			,#{personAbsence.status,
			jdbcType=INTEGER}
			,#{personAbsence.remark,
			jdbcType=VARCHAR}
			,#{personAbsence.createBy,
			jdbcType=VARCHAR}
			,#{personAbsence.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updatePersonAbsence" parameterType="com.glaf.heathcare.domain.PersonAbsence">
		update HEALTH_PERSON_ABSENCE${tableSuffix}
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="section != null">
				SECTION_ = #{section, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS_ = #{status, jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				REMARK_ = #{remark, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deletePersonAbsenceById" parameterType="com.glaf.heathcare.query.PersonAbsenceQuery">
		delete from
		HEALTH_PERSON_ABSENCE${tableSuffix}
		where ID_ = #{id}
	</delete>


	<select id="getPersonAbsenceById" parameterType="com.glaf.heathcare.query.PersonAbsenceQuery"
		resultMap="personAbsenceResultMap">
		select * from HEALTH_PERSON_ABSENCE${tableSuffix} where ID_
		= #{id}
	</select>


	<select id="getPersonAbsences" parameterType="com.glaf.heathcare.query.PersonAbsenceQuery"
		resultMap="personAbsenceResultMap">
		select distinct E.*
		<include refid="selectPersonAbsencesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.CREATETIME_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getPersonAbsenceCount" parameterType="com.glaf.heathcare.query.PersonAbsenceQuery"
		resultType="int">
		select count(*)
		<include refid="selectPersonAbsencesSql" />
	</select>


	<sql id="selectPersonAbsencesSql">

		from HEALTH_PERSON_ABSENCE${tableSuffix} E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index" collection="tenantIds"
					open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="gradeId != null and gradeId != '' ">
				and E.GRADEID_ = #{gradeId}
			</if>

			<if test="gradeIds != null and gradeIds.size() &gt; 0">
				and E.GRADEID_ IN
				<foreach item="x_gradeId" index="index" collection="gradeIds"
					open="(" separator="," close=")">
					#{x_gradeId}
				</foreach>
			</if>

			<if test="personId != null and personId != '' ">
				and E.PERSONID_ = #{personId}
			</if>

			<if test="personIds != null and personIds.size() &gt; 0">
				and E.PERSONID_ IN
				<foreach item="x_personId" index="index" collection="personIds"
					open="(" separator="," close=")">
					#{x_personId}
				</foreach>
			</if>

			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="day != null">
				and E.DAY_ = #{day}
			</if>

			<if test="days != null and days.size() &gt; 0">
				and E.DAY_ IN
				<foreach item="x_day" index="index" collection="days" open="("
					separator="," close=")">
					#{x_day}
				</foreach>
			</if>

			<if test="section != null and section != '' ">
				and E.SECTION_ = #{section}
			</if>

			<if test="status != null">
				and E.STATUS_ = #{status}
			</if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK_ like #{remarkLike}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createBys != null and createBys.size() &gt; 0">
				and E.CREATEBY_ IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
				</foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>