<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.MonthlyFeeMapper">

	<resultMap id="monthlyFeeResultMap" type="com.glaf.heathcare.domain.MonthlyFee">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="lastMonthSurplus" column="LASTMONTHSURPLUS_"
			jdbcType="DOUBLE" />
		<result property="monthLeft" column="MONTHLEFT_" jdbcType="DOUBLE" />
		<result property="monthTotalLeft" column="MONTHTOTALLEFT_"
			jdbcType="DOUBLE" />
		<result property="leftPercent" column="LEFTPERCENT_" jdbcType="DOUBLE" />
		<result property="exceedPercent" column="EXCEEDPERCENT_"
			jdbcType="DOUBLE" />
		<result property="personMonthlyFee" column="PERSONMONTHLYFEE_"
			jdbcType="DOUBLE" />
		<result property="fuelFee" column="FUELFEE_" jdbcType="DOUBLE" />
		<result property="laborFee" column="LABORFEE_" jdbcType="DOUBLE" />
		<result property="dessertFee" column="DESSERTFEE_" jdbcType="DOUBLE" />
		<result property="otherFee" column="OTHERFEE_" jdbcType="DOUBLE" />
		<result property="workDay" column="WORKDAY_" jdbcType="INTEGER" />
		<result property="totalRepastPerson" column="TOTALREPASTPERSON_"
			jdbcType="INTEGER" />
		<result property="remark" column="REMARK_" jdbcType="VARCHAR" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="semester" column="SEMESTER_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertMonthlyFee" parameterType="com.glaf.heathcare.domain.MonthlyFee">
		insert into HEALTH_MONTHLY_FEE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="lastMonthSurplus != null">
				,LASTMONTHSURPLUS_
			</if>
			<if test="monthLeft != null">
				,MONTHLEFT_
			</if>
			<if test="monthTotalLeft != null">
				,MONTHTOTALLEFT_
			</if>
			<if test="leftPercent != null">
				,LEFTPERCENT_
			</if>
			<if test="exceedPercent != null">
				,EXCEEDPERCENT_
			</if>
			<if test="personMonthlyFee != null">
				,PERSONMONTHLYFEE_
			</if>
			<if test="fuelFee != null">
				,FUELFEE_
			</if>
			<if test="laborFee != null">
				,LABORFEE_
			</if>
			<if test="dessertFee != null">
				,DESSERTFEE_
			</if>
			<if test="otherFee != null">
				,OTHERFEE_
			</if>
			<if test="workDay != null">
				,WORKDAY_
			</if>
			<if test="totalRepastPerson != null">
				,TOTALREPASTPERSON_
			</if>
			<if test="remark != null">
				,REMARK_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="lastMonthSurplus != null">
				,#{lastMonthSurplus, jdbcType=DOUBLE}
			</if>
			<if test="monthLeft != null">
				,#{monthLeft, jdbcType=DOUBLE}
			</if>
			<if test="monthTotalLeft != null">
				,#{monthTotalLeft, jdbcType=DOUBLE}
			</if>
			<if test="leftPercent != null">
				,#{leftPercent, jdbcType=DOUBLE}
			</if>
			<if test="exceedPercent != null">
				,#{exceedPercent, jdbcType=DOUBLE}
			</if>
			<if test="personMonthlyFee != null">
				,#{personMonthlyFee, jdbcType=DOUBLE}
			</if>
			<if test="fuelFee != null">
				,#{fuelFee, jdbcType=DOUBLE}
			</if>
			<if test="laborFee != null">
				,#{laborFee, jdbcType=DOUBLE}
			</if>
			<if test="dessertFee != null">
				,#{dessertFee, jdbcType=DOUBLE}
			</if>
			<if test="otherFee != null">
				,#{otherFee, jdbcType=DOUBLE}
			</if>
			<if test="workDay != null">
				,#{workDay, jdbcType=INTEGER}
			</if>
			<if test="totalRepastPerson != null">
				,#{totalRepastPerson, jdbcType=INTEGER}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertMonthlyFee" parameterType="java.util.List">
		insert into HEALTH_MONTHLY_FEE (
		ID_
		,TENANTID_
		,LASTMONTHSURPLUS_
		,MONTHLEFT_
		,MONTHTOTALLEFT_
		,LEFTPERCENT_
		,EXCEEDPERCENT_
		,PERSONMONTHLYFEE_
		,FUELFEE_
		,LABORFEE_
		,DESSERTFEE_
		,OTHERFEE_
		,WORKDAY_
		,TOTALREPASTPERSON_
		,REMARK_
		,YEAR_
		,MONTH_
		,SEMESTER_
		,CREATEBY_
		,CREATETIME_
		,UPDATEBY_
		,UPDATETIME_
		)
		values
		<foreach collection="list" item="monthlyFee" index="index"
			separator=",">
			(
			#{monthlyFee.id, jdbcType=BIGINT}
			,#{monthlyFee.tenantId,
			jdbcType=VARCHAR}
			,#{monthlyFee.lastMonthSurplus, jdbcType=DOUBLE}
			,#{monthlyFee.monthLeft, jdbcType=DOUBLE}
			,#{monthlyFee.monthTotalLeft, jdbcType=DOUBLE}
			,#{monthlyFee.leftPercent, jdbcType=DOUBLE}
			,#{monthlyFee.exceedPercent, jdbcType=DOUBLE}
			,#{monthlyFee.personMonthlyFee, jdbcType=DOUBLE}
			,#{monthlyFee.fuelFee, jdbcType=DOUBLE}
			,#{monthlyFee.laborFee,
			jdbcType=DOUBLE}
			,#{monthlyFee.dessertFee, jdbcType=DOUBLE}
			,#{monthlyFee.otherFee, jdbcType=DOUBLE}
			,#{monthlyFee.workDay,
			jdbcType=INTEGER}
			,#{monthlyFee.totalRepastPerson, jdbcType=INTEGER}
			,#{monthlyFee.remark, jdbcType=VARCHAR}
			,#{monthlyFee.year,
			jdbcType=INTEGER}
			,#{monthlyFee.month,
			jdbcType=INTEGER}
			,#{monthlyFee.semester, jdbcType=INTEGER}
			,#{monthlyFee.createBy,
			jdbcType=VARCHAR}
			,#{monthlyFee.createTime,
			jdbcType=TIMESTAMP}
			,#{monthlyFee.updateBy, jdbcType=VARCHAR}
			,#{monthlyFee.updateTime,
			jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertMonthlyFee_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="monthlyFee" index="index">
			insert into
			HEALTH_MONTHLY_FEE (
			ID_
			,TENANTID_
			,LASTMONTHSURPLUS_
			,MONTHLEFT_
			,MONTHTOTALLEFT_
			,LEFTPERCENT_
			,EXCEEDPERCENT_
			,PERSONMONTHLYFEE_
			,FUELFEE_
			,LABORFEE_
			,DESSERTFEE_
			,OTHERFEE_
			,WORKDAY_
			,TOTALREPASTPERSON_
			,REMARK_
			,YEAR_
			,MONTH_
			,SEMESTER_
			,CREATEBY_
			,CREATETIME_
			,UPDATEBY_
			,UPDATETIME_
			) values
			(
			#{monthlyFee.id,
			jdbcType=BIGINT}
			,#{monthlyFee.tenantId,
			jdbcType=VARCHAR}
			,#{monthlyFee.lastMonthSurplus, jdbcType=DOUBLE}
			,#{monthlyFee.monthLeft, jdbcType=DOUBLE}
			,#{monthlyFee.monthTotalLeft, jdbcType=DOUBLE}
			,#{monthlyFee.leftPercent, jdbcType=DOUBLE}
			,#{monthlyFee.exceedPercent, jdbcType=DOUBLE}
			,#{monthlyFee.personMonthlyFee, jdbcType=DOUBLE}
			,#{monthlyFee.fuelFee, jdbcType=DOUBLE}
			,#{monthlyFee.laborFee,
			jdbcType=DOUBLE}
			,#{monthlyFee.dessertFee, jdbcType=DOUBLE}
			,#{monthlyFee.otherFee, jdbcType=DOUBLE}
			,#{monthlyFee.workDay,
			jdbcType=INTEGER}
			,#{monthlyFee.totalRepastPerson, jdbcType=INTEGER}
			,#{monthlyFee.remark, jdbcType=VARCHAR}
			,#{monthlyFee.year,
			jdbcType=INTEGER}
			,#{monthlyFee.month,
			jdbcType=INTEGER}
			,#{monthlyFee.semester, jdbcType=INTEGER}
			,#{monthlyFee.createBy,
			jdbcType=VARCHAR}
			,#{monthlyFee.createTime,
			jdbcType=TIMESTAMP}
			,#{monthlyFee.updateBy, jdbcType=VARCHAR}
			,#{monthlyFee.updateTime,
			jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateMonthlyFee" parameterType="com.glaf.heathcare.domain.MonthlyFee">
		update HEALTH_MONTHLY_FEE
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="lastMonthSurplus != null">
				LASTMONTHSURPLUS_ = #{lastMonthSurplus, jdbcType=DOUBLE},
			</if>
			<if test="monthLeft != null">
				MONTHLEFT_ = #{monthLeft, jdbcType=DOUBLE},
			</if>
			<if test="monthTotalLeft != null">
				MONTHTOTALLEFT_ = #{monthTotalLeft, jdbcType=DOUBLE},
			</if>
			<if test="leftPercent != null">
				LEFTPERCENT_ = #{leftPercent, jdbcType=DOUBLE},
			</if>
			<if test="exceedPercent != null">
				EXCEEDPERCENT_ = #{exceedPercent, jdbcType=DOUBLE},
			</if>
			<if test="personMonthlyFee != null">
				PERSONMONTHLYFEE_ = #{personMonthlyFee, jdbcType=DOUBLE},
			</if>
			<if test="fuelFee != null">
				FUELFEE_ = #{fuelFee, jdbcType=DOUBLE},
			</if>
			<if test="laborFee != null">
				LABORFEE_ = #{laborFee, jdbcType=DOUBLE},
			</if>
			<if test="dessertFee != null">
				DESSERTFEE_ = #{dessertFee, jdbcType=DOUBLE},
			</if>
			<if test="otherFee != null">
				OTHERFEE_ = #{otherFee, jdbcType=DOUBLE},
			</if>
			<if test="workDay != null">
				WORKDAY_ = #{workDay, jdbcType=INTEGER},
			</if>
			<if test="totalRepastPerson != null">
				TOTALREPASTPERSON_ = #{totalRepastPerson,
				jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				REMARK_ = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteMonthlyFeeById" parameterType="long">
		delete from
		HEALTH_MONTHLY_FEE
		where ID_ = #{id}
	</delete>


	<select id="getMonthlyFeeById" parameterType="long"
		resultMap="monthlyFeeResultMap">
		select * from HEALTH_MONTHLY_FEE where ID_ = #{id}
	</select>


	<select id="getMonthlyFees" parameterType="com.glaf.heathcare.query.MonthlyFeeQuery"
		resultMap="monthlyFeeResultMap">
		select distinct E.*
		<include refid="selectMonthlyFeesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getMonthlyFeeCount" parameterType="com.glaf.heathcare.query.MonthlyFeeQuery"
		resultType="int">
		select count(*)
		<include refid="selectMonthlyFeesSql" />
	</select>


	<sql id="selectMonthlyFeesSql">

		from HEALTH_MONTHLY_FEE E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index" collection="tenantIds"
					open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>
		</where>
	</sql>

</mapper>