<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.MonthlyMealFeeMapper">

	<resultMap id="monthlyMealFeeResultMap" type="com.glaf.heathcare.domain.MonthlyMealFee">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="classType" column="CLASSTYPE_" jdbcType="VARCHAR" />
		<result property="receiptFund" column="RECEIPTFUND_" jdbcType="DOUBLE" />
		<result property="personTotal" column="PERSONTOTAL_" jdbcType="INTEGER" />
		<result property="absentPerson" column="ABSENTPERSON_"
			jdbcType="INTEGER" />
		<result property="absentDay" column="ABSENTDAY_" jdbcType="INTEGER" />
		<result property="absentRefund" column="ABSENTREFUND_"
			jdbcType="DOUBLE" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="semester" column="SEMESTER_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertMonthlyMealFee" parameterType="com.glaf.heathcare.domain.MonthlyMealFee">
		insert into HEALTH_MONTHLY_MEAL_FEE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="classType != null">
				,CLASSTYPE_
			</if>
			<if test="receiptFund != null">
				,RECEIPTFUND_
			</if>
			<if test="personTotal != null">
				,PERSONTOTAL_
			</if>
			<if test="absentPerson != null">
				,ABSENTPERSON_
			</if>
			<if test="absentDay != null">
				,ABSENTDAY_
			</if>
			<if test="absentRefund != null">
				,ABSENTREFUND_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="classType != null">
				,#{classType, jdbcType=VARCHAR}
			</if>
			<if test="receiptFund != null">
				,#{receiptFund, jdbcType=DOUBLE}
			</if>
			<if test="personTotal != null">
				,#{personTotal, jdbcType=INTEGER}
			</if>
			<if test="absentPerson != null">
				,#{absentPerson, jdbcType=INTEGER}
			</if>
			<if test="absentDay != null">
				,#{absentDay, jdbcType=INTEGER}
			</if>
			<if test="absentRefund != null">
				,#{absentRefund, jdbcType=DOUBLE}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertMonthlyMealFee" parameterType="java.util.List">
		insert into HEALTH_MONTHLY_MEAL_FEE (
		ID_
		,TENANTID_
		,CLASSTYPE_
		,RECEIPTFUND_
		,PERSONTOTAL_
		,ABSENTPERSON_
		,ABSENTDAY_
		,ABSENTREFUND_
		,YEAR_
		,MONTH_
		,SEMESTER_
		,CREATEBY_
		,CREATETIME_
		,UPDATEBY_
		,UPDATETIME_
		)
		values
		<foreach collection="list" item="monthlyMealFee" index="index"
			separator=",">
			(
			#{monthlyMealFee.id, jdbcType=BIGINT}
			,#{monthlyMealFee.tenantId, jdbcType=VARCHAR}
			,#{monthlyMealFee.classType, jdbcType=VARCHAR}
			,#{monthlyMealFee.receiptFund, jdbcType=DOUBLE}
			,#{monthlyMealFee.personTotal, jdbcType=INTEGER}
			,#{monthlyMealFee.absentPerson, jdbcType=INTEGER}
			,#{monthlyMealFee.absentDay, jdbcType=INTEGER}
			,#{monthlyMealFee.absentRefund, jdbcType=DOUBLE}
			,#{monthlyMealFee.year, jdbcType=INTEGER}
			,#{monthlyMealFee.month,
			jdbcType=INTEGER}
			,#{monthlyMealFee.semester, jdbcType=INTEGER}
			,#{monthlyMealFee.createBy, jdbcType=VARCHAR}
			,#{monthlyMealFee.createTime, jdbcType=TIMESTAMP}
			,#{monthlyMealFee.updateBy, jdbcType=VARCHAR}
			,#{monthlyMealFee.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertMonthlyMealFee_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="monthlyMealFee" index="index">
			insert
			into HEALTH_MONTHLY_MEAL_FEE (
			ID_
			,TENANTID_
			,CLASSTYPE_
			,RECEIPTFUND_
			,PERSONTOTAL_
			,ABSENTPERSON_
			,ABSENTDAY_
			,ABSENTREFUND_
			,YEAR_
			,MONTH_
			,SEMESTER_
			,CREATEBY_
			,CREATETIME_
			,UPDATEBY_
			,UPDATETIME_
			) values (
			#{monthlyMealFee.id, jdbcType=BIGINT}
			,#{monthlyMealFee.tenantId,
			jdbcType=VARCHAR}
			,#{monthlyMealFee.classType, jdbcType=VARCHAR}
			,#{monthlyMealFee.receiptFund, jdbcType=DOUBLE}
			,#{monthlyMealFee.personTotal, jdbcType=INTEGER}
			,#{monthlyMealFee.absentPerson, jdbcType=INTEGER}
			,#{monthlyMealFee.absentDay, jdbcType=INTEGER}
			,#{monthlyMealFee.absentRefund, jdbcType=DOUBLE}
			,#{monthlyMealFee.year, jdbcType=INTEGER}
			,#{monthlyMealFee.month,
			jdbcType=INTEGER}
			,#{monthlyMealFee.semester, jdbcType=INTEGER}
			,#{monthlyMealFee.createBy, jdbcType=VARCHAR}
			,#{monthlyMealFee.createTime, jdbcType=TIMESTAMP}
			,#{monthlyMealFee.updateBy, jdbcType=VARCHAR}
			,#{monthlyMealFee.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateMonthlyMealFee" parameterType="com.glaf.heathcare.domain.MonthlyMealFee">
		update HEALTH_MONTHLY_MEAL_FEE
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="classType != null">
				CLASSTYPE_ = #{classType, jdbcType=VARCHAR},
			</if>
			<if test="receiptFund != null">
				RECEIPTFUND_ = #{receiptFund, jdbcType=DOUBLE},
			</if>
			<if test="personTotal != null">
				PERSONTOTAL_ = #{personTotal, jdbcType=INTEGER},
			</if>
			<if test="absentPerson != null">
				ABSENTPERSON_ = #{absentPerson, jdbcType=INTEGER},
			</if>
			<if test="absentDay != null">
				ABSENTDAY_ = #{absentDay, jdbcType=INTEGER},
			</if>
			<if test="absentRefund != null">
				ABSENTREFUND_ = #{absentRefund, jdbcType=DOUBLE},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteMonthlyMealFeeById" parameterType="long">
		delete from
		HEALTH_MONTHLY_MEAL_FEE
		where ID_ = #{id}
	</delete>


	<select id="getMonthlyMealFeeById" parameterType="long"
		resultMap="monthlyMealFeeResultMap">
		select * from HEALTH_MONTHLY_MEAL_FEE where ID_ = #{id}
	</select>


	<select id="getMonthlyMealFees" parameterType="com.glaf.heathcare.query.MonthlyMealFeeQuery"
		resultMap="monthlyMealFeeResultMap">
		select distinct E.*
		<include refid="selectMonthlyMealFeesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getMonthlyMealFeeCount" parameterType="com.glaf.heathcare.query.MonthlyMealFeeQuery"
		resultType="int">
		select count(*)
		<include refid="selectMonthlyMealFeesSql" />
	</select>


	<sql id="selectMonthlyMealFeesSql">

		from HEALTH_MONTHLY_MEAL_FEE E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index" collection="tenantIds"
					open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="classType != null and classType != '' ">
				and E.CLASSTYPE_ = #{classType}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>