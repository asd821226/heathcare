<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.GoodsStockMapper">

	<resultMap id="goodsStockResultMap" type="com.glaf.heathcare.domain.GoodsStock">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="goodsId" column="GOODSID_" jdbcType="BIGINT" />
		<result property="goodsName" column="GOODSNAME_" jdbcType="VARCHAR" />
		<result property="goodsNodeId" column="GOODSNODEID_" jdbcType="BIGINT" />
		<result property="quantity" column="QUANTITY_" jdbcType="DOUBLE" />
		<result property="unit" column="UNIT_" jdbcType="VARCHAR" />
		<result property="expiryDate" column="EXPIRYDATE_" jdbcType="TIMESTAMP" />
		<result property="latestOutStockTime" column="LATESTOUTSTOCKTIME_"
			jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertGoodsStock" parameterType="com.glaf.heathcare.domain.GoodsStock">
		insert into GOODS_STOCK${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="goodsId != null">
				,GOODSID_
			</if>
			<if test="goodsName != null">
				,GOODSNAME_
			</if>
			<if test="goodsNodeId != null">
				,GOODSNODEID_
			</if>
			<if test="quantity != null">
				,QUANTITY_
			</if>
			<if test="unit != null">
				,UNIT_
			</if>
			<if test="expiryDate != null">
				,EXPIRYDATE_
			</if>
			<if test="latestOutStockTime != null">
				,LATESTOUTSTOCKTIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="goodsId != null">
				,#{goodsId, jdbcType=BIGINT}
			</if>
			<if test="goodsName != null">
				,#{goodsName, jdbcType=VARCHAR}
			</if>
			<if test="goodsNodeId != null">
				,#{goodsNodeId, jdbcType=BIGINT}
			</if>
			<if test="quantity != null">
				,#{quantity, jdbcType=DOUBLE}
			</if>
			<if test="unit != null">
				,#{unit, jdbcType=VARCHAR}
			</if>
			<if test="expiryDate != null">
				,#{expiryDate, jdbcType=TIMESTAMP}
			</if>
			<if test="latestOutStockTime != null">
				,#{latestOutStockTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateGoodsStock" parameterType="com.glaf.heathcare.domain.GoodsStock">
		update GOODS_STOCK${tableSuffix}
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="quantity != null">
				QUANTITY_ = #{quantity, jdbcType=DOUBLE},
			</if>
			<if test="expiryDate != null">
				EXPIRYDATE_ = #{expiryDate, jdbcType=TIMESTAMP},
			</if>
			<if test="latestOutStockTime != null">
				LATESTOUTSTOCKTIME_ = #{latestOutStockTime,
				jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteGoodsStockById" parameterType="com.glaf.heathcare.query.GoodsStockQuery">
		delete from
		GOODS_STOCK${tableSuffix}
		where ID_ = #{id}
	</delete>


	<select id="getGoodsStockById" parameterType="com.glaf.heathcare.query.GoodsStockQuery"
		resultMap="goodsStockResultMap">
		select * from GOODS_STOCK${tableSuffix} where ID_ = #{id}
	</select>


	<select id="getGoodsStocks" parameterType="com.glaf.heathcare.query.GoodsStockQuery"
		resultMap="goodsStockResultMap">
		select distinct E.*
		<include refid="selectGoodsStocksSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.GOODSNODEID_ asc
			</otherwise>
		</choose>
	</select>


	<select id="getGoodsStockCount" parameterType="com.glaf.heathcare.query.GoodsStockQuery"
		resultType="int">
		select count(*)
		<include refid="selectGoodsStocksSql" />
	</select>


	<sql id="selectGoodsStocksSql">

		from GOODS_STOCK${tableSuffix} E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index" collection="tenantIds"
					open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="goodsId != null">
				and E.GOODSID_ = #{goodsId}
			</if>

			<if test="goodsIds != null and goodsIds.size() &gt; 0">
				and E.GOODSID_ IN
				<foreach item="x_goodsId" index="index" collection="goodsIds"
					open="(" separator="," close=")">
					#{x_goodsId}
				</foreach>
			</if>

			<if test="goodsName != null and goodsName != '' ">
				and E.GOODSNAME_ = #{goodsName}
			</if>

			<if test="goodsNameLike != null and goodsNameLike != '' ">
				and E.GOODSNAME_ like #{goodsNameLike}
			</if>

			<if test="goodsNodeId != null">
				and E.GOODSNODEID_ = #{goodsNodeId}
			</if>

			<if test="goodsNodeIds != null and goodsNodeIds.size() &gt; 0">
				and E.GOODSNODEID_ IN
				<foreach item="x_goodsNodeId" index="index" collection="goodsNodeIds"
					open="(" separator="," close=")">
					#{x_goodsNodeId}
				</foreach>
			</if>
			
			<if test="quantityGreaterThan != null">
				and E.QUANTITY_ &gt; #{quantityGreaterThan}
			</if>

			<if test="quantityGreaterThanOrEqual != null">
				and E.QUANTITY_ &gt;= #{quantityGreaterThanOrEqual}
			</if>

			<if test="quantityLessThanOrEqual != null">
				and E.QUANTITY_ &lt;= #{quantityLessThanOrEqual}
			</if>

			<if test="unit != null and unit != '' ">
				and E.UNIT_ = #{unit}
			</if>

			<if test="expiryDateGreaterThanOrEqual != null">
				and E.EXPIRYDATE_ &gt;= #{expiryDateGreaterThanOrEqual}
			</if>

			<if test="expiryDateLessThanOrEqual != null">
				and E.EXPIRYDATE_ &lt;= #{expiryDateLessThanOrEqual}
			</if>

			<if test="latestOutStockTimeGreaterThanOrEqual != null">
				and E.LATESTOUTSTOCKTIME_ &gt;=
				#{latestOutStockTimeGreaterThanOrEqual}
			</if>

			<if test="latestOutStockTimeLessThanOrEqual != null">
				and E.LATESTOUTSTOCKTIME_ &lt;=
				#{latestOutStockTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>