<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.GoodsPriceAvgMapper">

	<resultMap id="goodsPriceAvgResultMap" type="com.glaf.heathcare.domain.GoodsPriceAvg">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="province" column="PROVINCE_" jdbcType="VARCHAR" />
		<result property="provinceId" column="PROVINCEID_" jdbcType="BIGINT" />
		<result property="city" column="CITY_" jdbcType="VARCHAR" />
		<result property="cityId" column="CITYID_" jdbcType="BIGINT" />
		<result property="area" column="AREA_" jdbcType="VARCHAR" />
		<result property="areaId" column="AREAID_" jdbcType="BIGINT" />
		<result property="goodsId" column="GOODSID_" jdbcType="BIGINT" />
		<result property="goodsName" column="GOODSNAME_" jdbcType="VARCHAR" />
		<result property="goodsNodeId" column="GOODSNODEID_" jdbcType="BIGINT" />
		<result property="price" column="PRICE_" jdbcType="DOUBLE" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="fullDay" column="FULLDAY_" jdbcType="INTEGER" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertGoodsPriceAvg" parameterType="com.glaf.heathcare.domain.GoodsPriceAvg">
		insert into GOODS_PRICE_AVG
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="province != null">
				,PROVINCE_
			</if>
			<if test="provinceId != null">
				,PROVINCEID_
			</if>
			<if test="city != null">
				,CITY_
			</if>
			<if test="cityId != null">
				,CITYID_
			</if>
			<if test="area != null">
				,AREA_
			</if>
			<if test="areaId != null">
				,AREAID_
			</if>
			<if test="goodsId != null">
				,GOODSID_
			</if>
			<if test="goodsName != null">
				,GOODSNAME_
			</if>
			<if test="goodsNodeId != null">
				,GOODSNODEID_
			</if>
			<if test="price != null">
				,PRICE_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="fullDay != null">
				,FULLDAY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="province != null">
				,#{province, jdbcType=VARCHAR}
			</if>
			<if test="provinceId != null">
				,#{provinceId, jdbcType=BIGINT}
			</if>
			<if test="city != null">
				,#{city, jdbcType=VARCHAR}
			</if>
			<if test="cityId != null">
				,#{cityId, jdbcType=BIGINT}
			</if>
			<if test="area != null">
				,#{area, jdbcType=VARCHAR}
			</if>
			<if test="areaId != null">
				,#{areaId, jdbcType=BIGINT}
			</if>
			<if test="goodsId != null">
				,#{goodsId, jdbcType=BIGINT}
			</if>
			<if test="goodsName != null">
				,#{goodsName, jdbcType=VARCHAR}
			</if>
			<if test="goodsNodeId != null">
				,#{goodsNodeId, jdbcType=BIGINT}
			</if>
			<if test="price != null">
				,#{price, jdbcType=DOUBLE}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="fullDay != null">
				,#{fullDay, jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertGoodsPriceAvg" parameterType="java.util.List">
		insert into GOODS_PRICE_AVG (
		ID_
		,PROVINCE_
		,PROVINCEID_
		,CITY_
		,CITYID_
		,AREA_
		,AREAID_
		,GOODSID_
		,GOODSNAME_
		,GOODSNODEID_
		,PRICE_
		,YEAR_
		,MONTH_
		,FULLDAY_
		,CREATETIME_
		) values
		<foreach collection="list" item="goodsPriceAvg" index="index"
			separator=",">
			(
			#{goodsPriceAvg.id, jdbcType=BIGINT}
			,#{goodsPriceAvg.province, jdbcType=VARCHAR}
			,#{goodsPriceAvg.provinceId, jdbcType=BIGINT}
			,#{goodsPriceAvg.city,
			jdbcType=VARCHAR}
			,#{goodsPriceAvg.cityId, jdbcType=BIGINT}
			,#{goodsPriceAvg.area, jdbcType=VARCHAR}
			,#{goodsPriceAvg.areaId,
			jdbcType=BIGINT}
			,#{goodsPriceAvg.goodsId, jdbcType=BIGINT}
			,#{goodsPriceAvg.goodsName, jdbcType=VARCHAR}
			,#{goodsPriceAvg.goodsNodeId, jdbcType=BIGINT}
			,#{goodsPriceAvg.price, jdbcType=DOUBLE}
			,#{goodsPriceAvg.year,
			jdbcType=INTEGER}
			,#{goodsPriceAvg.month, jdbcType=INTEGER}
			,#{goodsPriceAvg.fullDay, jdbcType=INTEGER}
			,#{goodsPriceAvg.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertGoodsPriceAvg_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="goodsPriceAvg" index="index">
			insert
			into GOODS_PRICE_AVG (
			ID_
			,PROVINCE_
			,PROVINCEID_
			,CITY_
			,CITYID_
			,AREA_
			,AREAID_
			,GOODSID_
			,GOODSNAME_
			,GOODSNODEID_
			,PRICE_
			,YEAR_
			,MONTH_
			,FULLDAY_
			,CREATETIME_
			) values (
			#{goodsPriceAvg.id, jdbcType=BIGINT}
			,#{goodsPriceAvg.province, jdbcType=VARCHAR}
			,#{goodsPriceAvg.provinceId, jdbcType=BIGINT}
			,#{goodsPriceAvg.city,
			jdbcType=VARCHAR}
			,#{goodsPriceAvg.cityId, jdbcType=BIGINT}
			,#{goodsPriceAvg.area, jdbcType=VARCHAR}
			,#{goodsPriceAvg.areaId,
			jdbcType=BIGINT}
			,#{goodsPriceAvg.goodsId, jdbcType=BIGINT}
			,#{goodsPriceAvg.goodsName, jdbcType=VARCHAR}
			,#{goodsPriceAvg.goodsNodeId, jdbcType=BIGINT}
			,#{goodsPriceAvg.price, jdbcType=DOUBLE}
			,#{goodsPriceAvg.year,
			jdbcType=INTEGER}
			,#{goodsPriceAvg.month, jdbcType=INTEGER}
			,#{goodsPriceAvg.fullDay, jdbcType=INTEGER}
			,#{goodsPriceAvg.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<delete id="deleteGoodsPriceAvgById" parameterType="long">
		delete from
		GOODS_PRICE_AVG
		where ID_ = #{id}
	</delete>


	<select id="getGoodsPriceAvgById" parameterType="long"
		resultMap="goodsPriceAvgResultMap">
		select * from GOODS_PRICE_AVG where ID_ = #{id}
	</select>


	<select id="getGoodsPriceAvgs" parameterType="com.glaf.heathcare.query.GoodsPriceAvgQuery"
		resultMap="goodsPriceAvgResultMap">
		select distinct E.*
		<include refid="selectGoodsPriceAvgsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getGoodsPriceAvgCount" parameterType="com.glaf.heathcare.query.GoodsPriceAvgQuery"
		resultType="int">
		select count(*)
		<include refid="selectGoodsPriceAvgsSql" />
	</select>


	<sql id="selectGoodsPriceAvgsSql">

		from GOODS_PRICE_AVG E

		<where>
			1 = 1

			<if test="province != null and province != '' ">
				and E.PROVINCE_ = #{province}
			</if>

			<if test="provinceId != null">
				and E.PROVINCEID_ = #{provinceId}
			</if>

			<if test="provinceIds != null and provinceIds.size() &gt; 0">
				and E.PROVINCEID_ IN
				<foreach item="x_provinceId" index="index" collection="provinceIds"
					open="(" separator="," close=")">
					#{x_provinceId}
				</foreach>
			</if>

			<if test="city != null and city != '' ">
				and E.CITY_ = #{city}
			</if>

			<if test="cityId != null">
				and E.CITYID_ = #{cityId}
			</if>

			<if test="cityIds != null and cityIds.size() &gt; 0">
				and E.CITYID_ IN
				<foreach item="x_cityId" index="index" collection="cityIds"
					open="(" separator="," close=")">
					#{x_cityId}
				</foreach>
			</if>

			<if test="area != null and area != '' ">
				and E.AREA_ = #{area}
			</if>

			<if test="areaId != null">
				and E.AREAID_ = #{areaId}
			</if>

			<if test="areaIds != null and areaIds.size() &gt; 0">
				and E.AREAID_ IN
				<foreach item="x_areaId" index="index" collection="areaIds"
					open="(" separator="," close=")">
					#{x_areaId}
				</foreach>
			</if>

			<if test="goodsId != null">
				and E.GOODSID_ = #{goodsId}
			</if>

			<if test="goodsIds != null and goodsIds.size() &gt; 0">
				and E.GOODSID_ IN
				<foreach item="x_goodsId" index="index" collection="goodsIds"
					open="(" separator="," close=")">
					#{x_goodsId}
				</foreach>
			</if>

			<if test="goodsNameLike != null and goodsNameLike != '' ">
				and E.GOODSNAME_ like #{goodsNameLike}
			</if>

			<if test="goodsNodeId != null">
				and E.GOODSNODEID_ = #{goodsNodeId}
			</if>

			<if test="goodsNodeIds != null and goodsNodeIds.size() &gt; 0">
				and E.GOODSNODEID_ IN
				<foreach item="x_goodsNodeId" index="index" collection="goodsNodeIds"
					open="(" separator="," close=")">
					#{x_goodsNodeId}
				</foreach>
			</if>

			<if test="priceGreaterThanOrEqual != null">
				and E.PRICE_ &gt;= #{priceGreaterThanOrEqual}
			</if>

			<if test="priceLessThanOrEqual != null">
				and E.PRICE_ &lt;= #{priceLessThanOrEqual}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="fullDay != null">
				and E.FULLDAY_ = #{fullDay}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>