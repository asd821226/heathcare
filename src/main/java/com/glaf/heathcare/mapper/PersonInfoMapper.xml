<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.PersonInfoMapper">

	<resultMap id="personInfoResultMap" type="com.glaf.heathcare.domain.PersonInfo">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="organizationId" column="ORGANIZATIONID_"
			jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR"/>
		<result property="male" column="MALE_" jdbcType="INTEGER" />
		<result property="female" column="FEMALE_" jdbcType="INTEGER" />
		<result property="age" column="AGE_" jdbcType="INTEGER" />
		<result property="classType" column="CLASSTYPE_" jdbcType="VARCHAR"/>
		<result property="sortNo" column="SORTNO_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertPersonInfo" parameterType="com.glaf.heathcare.domain.PersonInfo">
		insert into HEALTH_PERSON_INFO
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="organizationId != null">
				,ORGANIZATIONID_
			</if>
			<if test="tenantId != null">
				,TENANTID_ 
			</if>
			<if test="male != null">
				,MALE_
			</if>
			<if test="female != null">
				,FEMALE_
			</if>
			<if test="age != null">
				,AGE_
			</if>
			<if test="classType != null">
				,CLASSTYPE_ 
			</if>
			<if test="sortNo != null">
				,SORTNO_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="organizationId != null">
				,#{organizationId, jdbcType=BIGINT}
			</if>
			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="male != null">
				,#{male, jdbcType=INTEGER}
			</if>
			<if test="female != null">
				,#{female, jdbcType=INTEGER}
			</if>
			<if test="age != null">
				,#{age, jdbcType=INTEGER}
			</if>
			<if test="classType != null">
				,#{classType, jdbcType=VARCHAR}
			</if>
			<if test="sortNo != null">
				,#{sortNo, jdbcType=INTEGER}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertPersonInfo" parameterType="java.util.List">
		insert into HEALTH_PERSON_INFO (
		ID_
		,ORGANIZATIONID_
		,TENANTID_ 
		,MALE_
		,FEMALE_
		,AGE_
		,CLASSTYPE_ 
		,SORTNO_
		,CREATEBY_
		,CREATETIME_
		,UPDATEBY_
		,UPDATETIME_
		) values
		<foreach collection="list" item="personInfo" index="index"
			separator=",">
			(
			#{personInfo.id, jdbcType=VARCHAR}
			,#{personInfo.organizationId, jdbcType=BIGINT}
			,#{personInfo.tenantId, jdbcType=VARCHAR}
			,#{personInfo.male,
			jdbcType=INTEGER}
			,#{personInfo.female, jdbcType=INTEGER}
			,#{personInfo.age, jdbcType=INTEGER}
			,#{personInfo.classType, jdbcType=VARCHAR}
			,#{personInfo.sortNo,
			jdbcType=INTEGER}
			,#{personInfo.createBy, jdbcType=VARCHAR}
			,#{personInfo.createTime, jdbcType=TIMESTAMP}
			,#{personInfo.updateBy,
			jdbcType=VARCHAR}
			,#{personInfo.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertPersonInfo_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="personInfo" index="index">
			insert into
			HEALTH_PERSON_INFO (
			ID_
			,ORGANIZATIONID_
			,TENANTID_ 
			,MALE_
			,FEMALE_
			,AGE_
			,CLASSTYPE_ 
			,SORTNO_
			,CREATEBY_
			,CREATETIME_
			,UPDATEBY_
			,UPDATETIME_
			) values (
			#{personInfo.id, jdbcType=VARCHAR}
			,#{personInfo.organizationId,
			jdbcType=BIGINT}
			,#{personInfo.tenantId, jdbcType=VARCHAR}
			,#{personInfo.male, jdbcType=INTEGER}
			,#{personInfo.female, jdbcType=INTEGER}
			,#{personInfo.age,
			jdbcType=INTEGER}
			,#{personInfo.classType, jdbcType=VARCHAR}
			,#{personInfo.sortNo, jdbcType=INTEGER}
			,#{personInfo.createBy, jdbcType=VARCHAR}
			,#{personInfo.createTime,
			jdbcType=TIMESTAMP}
			,#{personInfo.updateBy, jdbcType=VARCHAR}
			,#{personInfo.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updatePersonInfo" parameterType="com.glaf.heathcare.domain.PersonInfo">
		update HEALTH_PERSON_INFO
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="male != null">
				MALE_ = #{male, jdbcType=INTEGER},
			</if>
			<if test="female != null">
				FEMALE_ = #{female, jdbcType=INTEGER},
			</if>
			<if test="age != null">
				AGE_ = #{age, jdbcType=INTEGER},
			</if>
			<if test="classType != null">
				CLASSTYPE_ = #{classType, jdbcType=VARCHAR},
			</if>
			<if test="sortNo != null">
				SORTNO_ = #{sortNo, jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deletePersonInfoById" parameterType="string">
		delete from
		HEALTH_PERSON_INFO
		where ID_ = #{id}
	</delete>


	<delete id="deletePersonInfos" parameterType="com.glaf.heathcare.query.PersonInfoQuery">
		delete from HEALTH_PERSON_INFO
		where (
		ID_ IN
		<foreach item="x_id" index="index" collection="ids" open="("
			separator="," close=")">
			#{x_id}
		</foreach>
		)
	</delete>


	<select id="getPersonInfoById" parameterType="string"
		resultMap="personInfoResultMap">
		select * from HEALTH_PERSON_INFO where ID_ = #{id}
	</select>


	<select id="getPersonInfos" parameterType="com.glaf.heathcare.query.PersonInfoQuery"
		resultMap="personInfoResultMap">
		select distinct E.*
		<include refid="selectPersonInfosSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORTNO_ asc, E.AGE_ asc
			</otherwise>
		</choose>
	</select>


	<select id="getPersonInfoCount" parameterType="com.glaf.heathcare.query.PersonInfoQuery"
		resultType="int">
		select count(*)
		<include refid="selectPersonInfosSql" />
	</select>


	<sql id="selectPersonInfosSql">

		from HEALTH_PERSON_INFO E

		<where>
			1 = 1

			<if test="organizationId != null">
				and E.ORGANIZATIONID_ = #{organizationId}
			</if>
			
			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
            </if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
			</if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>