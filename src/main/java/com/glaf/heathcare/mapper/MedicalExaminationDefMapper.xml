<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.MedicalExaminationDefMapper">

	<resultMap id="medicalExaminationDefResultMap"
		type="com.glaf.heathcare.domain.MedicalExaminationDef">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="checkId" column="CHECKID_" jdbcType="VARCHAR" />
		<result property="title" column="TITLE_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="checkDate" column="CHECKDATE_" jdbcType="TIMESTAMP" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="day" column="DAY_" jdbcType="INTEGER" />
		<result property="remark" column="REMARK_" jdbcType="VARCHAR" />
		<result property="enableFlag" column="ENABLEFLAG_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertMedicalExaminationDef" parameterType="com.glaf.heathcare.domain.MedicalExaminationDef">
		insert into HEALTH_MEDICAL_EXAMINATION_DEF
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="checkId != null">
				,CHECKID_
			</if>
			<if test="title != null">
				,TITLE_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="checkDate != null">
				,CHECKDATE_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="day != null">
				,DAY_
			</if>
			<if test="remark != null">
				,REMARK_
			</if>
			<if test="enableFlag != null">
				,ENABLEFLAG_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="checkId != null">
				,#{checkId, jdbcType=VARCHAR}
			</if>
			<if test="title != null">
				,#{title, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="checkDate != null">
				,#{checkDate, jdbcType=TIMESTAMP}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="day != null">
				,#{day, jdbcType=INTEGER}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="enableFlag != null">
				,#{enableFlag, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertMedicalExaminationDef" parameterType="java.util.List">
		insert into HEALTH_MEDICAL_EXAMINATION_DEF (
		ID_
		,TENANTID_
		,CHECKID_
		,TITLE_
		,TYPE_
		,CHECKDATE_
		,YEAR_
		,MONTH_
		,DAY_
		,REMARK_
		,ENABLEFLAG_
		,CREATEBY_
		,CREATETIME_
		)
		values
		<foreach collection="list" item="medicalExaminationDef" index="index"
			separator=",">
			(
			#{medicalExaminationDef.id, jdbcType=BIGINT}
			,#{medicalExaminationDef.tenantId, jdbcType=VARCHAR}
			,#{medicalExaminationDef.checkId, jdbcType=VARCHAR}
			,#{medicalExaminationDef.title, jdbcType=VARCHAR}
			,#{medicalExaminationDef.type, jdbcType=VARCHAR}
			,#{medicalExaminationDef.checkDate, jdbcType=TIMESTAMP}
			,#{medicalExaminationDef.year, jdbcType=INTEGER}
			,#{medicalExaminationDef.month, jdbcType=INTEGER}
			,#{medicalExaminationDef.day, jdbcType=INTEGER}
			,#{medicalExaminationDef.remark, jdbcType=VARCHAR}
			,#{medicalExaminationDef.enableFlag, jdbcType=VARCHAR}
			,#{medicalExaminationDef.createBy, jdbcType=VARCHAR}
			,#{medicalExaminationDef.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertMedicalExaminationDef_oracle"
		parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="medicalExaminationDef" index="index">
			insert into HEALTH_MEDICAL_EXAMINATION_DEF (
			ID_
			,TENANTID_
			,CHECKID_
			,TITLE_
			,TYPE_
			,CHECKDATE_
			,YEAR_
			,MONTH_
			,DAY_
			,REMARK_
			,ENABLEFLAG_
			,CREATEBY_
			,CREATETIME_
			)
			values (
			#{medicalExaminationDef.id,
			jdbcType=BIGINT}
			,#{medicalExaminationDef.tenantId, jdbcType=VARCHAR}
			,#{medicalExaminationDef.checkId, jdbcType=VARCHAR}
			,#{medicalExaminationDef.title, jdbcType=VARCHAR}
			,#{medicalExaminationDef.type, jdbcType=VARCHAR}
			,#{medicalExaminationDef.checkDate, jdbcType=TIMESTAMP}
			,#{medicalExaminationDef.year, jdbcType=INTEGER}
			,#{medicalExaminationDef.month, jdbcType=INTEGER}
			,#{medicalExaminationDef.day, jdbcType=INTEGER}
			,#{medicalExaminationDef.remark, jdbcType=VARCHAR}
			,#{medicalExaminationDef.enableFlag, jdbcType=VARCHAR}
			,#{medicalExaminationDef.createBy, jdbcType=VARCHAR}
			,#{medicalExaminationDef.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateMedicalExaminationDef" parameterType="com.glaf.heathcare.domain.MedicalExaminationDef">
		update HEALTH_MEDICAL_EXAMINATION_DEF
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="title != null">
				TITLE_ = #{title, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="checkDate != null">
				CHECKDATE_ = #{checkDate, jdbcType=TIMESTAMP},
			</if>
			<if test="year != null">
				YEAR_ = #{year, jdbcType=INTEGER},
			</if>
			<if test="month != null">
				MONTH_ = #{month, jdbcType=INTEGER},
			</if>
			<if test="day != null">
				DAY_ = #{day, jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				REMARK_ = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="enableFlag != null">
				ENABLEFLAG_ = #{enableFlag, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteMedicalExaminationDefById" parameterType="long">
		delete from HEALTH_MEDICAL_EXAMINATION_DEF
		where ID_ = #{id}
	</delete>


	<select id="getMedicalExaminationDefByCheckId" parameterType="string"
		resultMap="medicalExaminationDefResultMap">
		select * from HEALTH_MEDICAL_EXAMINATION_DEF where CHECKID_ = #{checkId}
	</select>
	
	
	<select id="getMedicalExaminationDefById" parameterType="long"
		resultMap="medicalExaminationDefResultMap">
		select * from HEALTH_MEDICAL_EXAMINATION_DEF where ID_ =
		#{id}
	</select>


	<select id="getMedicalExaminationDefs" parameterType="com.glaf.heathcare.query.MedicalExaminationDefQuery"
		resultMap="medicalExaminationDefResultMap">
		select distinct E.*
		<include refid="selectMedicalExaminationDefsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getMedicalExaminationDefCount" parameterType="com.glaf.heathcare.query.MedicalExaminationDefQuery"
		resultType="int">
		select count(*)
		<include refid="selectMedicalExaminationDefsSql" />
	</select>


	<sql id="selectMedicalExaminationDefsSql">

		from HEALTH_MEDICAL_EXAMINATION_DEF E

		<where>
			1 = 1

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index" collection="tenantIds"
					open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="titleLike != null and titleLike != '' ">
				and E.TITLE_ like #{titleLike}
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="checkDateGreaterThanOrEqual != null">
				and E.CHECKDATE_ &gt;= #{checkDateGreaterThanOrEqual}
			</if>

			<if test="checkDateLessThanOrEqual != null">
				and E.CHECKDATE_ &lt;= #{checkDateLessThanOrEqual}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK_ like #{remarkLike}
			</if>

			<if test="enableFlag != null and enableFlag != '' ">
				and E.ENABLEFLAG_ = #{enableFlag}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>