<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.FoodADIMapper">

	<resultMap id="foodADIResultMap" type="com.glaf.heathcare.domain.FoodADI">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="nodeId" column="NODEID_" jdbcType="BIGINT" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="description" column="DESCRIPTION_" jdbcType="VARCHAR" />
		<result property="lowest" column="LOWEST_" jdbcType="DOUBLE" />
		<result property="average" column="AVERAGE_" jdbcType="DOUBLE" />
		<result property="highest" column="HIGHEST_" jdbcType="DOUBLE" />
		<result property="ageGroup" column="AGEGROUP_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="typeId" column="TYPEID_" jdbcType="BIGINT" />
		<result property="sortNo" column="SORTNO_" jdbcType="INTEGER" />
		<result property="enableFlag" column="ENABLEFLAG_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertFoodADI" parameterType="com.glaf.heathcare.domain.FoodADI">
		insert into HEALTH_FOOD_ADI
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="nodeId != null">
				,NODEID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="description != null">
				,DESCRIPTION_
			</if>
			<if test="lowest != null">
				,LOWEST_
			</if>
			<if test="average != null">
				,AVERAGE_
			</if>
			<if test="highest != null">
				,HIGHEST_
			</if>
			<if test="ageGroup != null">
				,AGEGROUP_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="typeId != null">
				,TYPEID_
			</if>
			<if test="sortNo != null">
				,SORTNO_
			</if>
			<if test="enableFlag != null">
				,ENABLEFLAG_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}
			<if test="nodeId != null">
				,#{nodeId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="description != null">
				,#{description, jdbcType=VARCHAR}
			</if>
			<if test="lowest != null">
				,#{lowest, jdbcType=DOUBLE}
			</if>
			<if test="average != null">
				,#{average, jdbcType=DOUBLE}
			</if>
			<if test="highest != null">
				,#{highest, jdbcType=DOUBLE}
			</if>
			<if test="ageGroup != null">
				,#{ageGroup, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="typeId != null">
				,#{typeId, jdbcType=BIGINT}
			</if>
			<if test="sortNo != null">
				,#{sortNo, jdbcType=INTEGER}
			</if>
			<if test="enableFlag != null">
				,#{enableFlag, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertFoodADI" parameterType="java.util.List">
		insert into HEALTH_FOOD_ADI (
		ID_
		,NODEID_
		,NAME_
		,DESCRIPTION_
		,LOWEST_
		,AVERAGE_
		,HIGHEST_
		,AGEGROUP_
		,TYPE_
		,TYPEID_
		,SORTNO_
		,ENABLEFLAG_
		,CREATEBY_
		,CREATETIME_
		,UPDATEBY_
		,UPDATETIME_
		)
		values
		<foreach collection="list" item="foodADI" index="index"
			separator=",">
			(
			#{foodADI.id, jdbcType=BIGINT}
			,#{foodADI.nodeId,
			jdbcType=BIGINT}
			,#{foodADI.name,
			jdbcType=VARCHAR}
			,#{foodADI.description, jdbcType=VARCHAR}
			,#{foodADI.lowest,
			jdbcType=DOUBLE}
			,#{foodADI.average,
			jdbcType=DOUBLE}
			,#{foodADI.highest, jdbcType=DOUBLE}
			,#{foodADI.ageGroup,
			jdbcType=VARCHAR}
			,#{foodADI.type,
			jdbcType=VARCHAR}
			,#{foodADI.typeId,
			jdbcType=BIGINT}
			,#{foodADI.sortNo, jdbcType=INTEGER}
			,#{foodADI.enableFlag,
			jdbcType=VARCHAR}
			,#{foodADI.createBy,
			jdbcType=VARCHAR}
			,#{foodADI.createTime, jdbcType=TIMESTAMP}
			,#{foodADI.updateBy,
			jdbcType=VARCHAR}
			,#{foodADI.updateTime,
			jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertFoodADI_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="foodADI" index="index">
			insert into
			HEALTH_FOOD_ADI (
			ID_
			,NODEID_
			,NAME_
			,DESCRIPTION_
			,LOWEST_
			,AVERAGE_
			,HIGHEST_
			,AGEGROUP_
			,TYPE_
			,TYPEID_
			,SORTNO_
			,ENABLEFLAG_
			,CREATEBY_
			,CREATETIME_
			,UPDATEBY_
			,UPDATETIME_
			)
			values (
			#{foodADI.id,
			jdbcType=BIGINT}
			,#{foodADI.nodeId,
			jdbcType=BIGINT}
			,#{foodADI.name,
			jdbcType=VARCHAR}
			,#{foodADI.description,
			jdbcType=VARCHAR}
			,#{foodADI.lowest,
			jdbcType=DOUBLE}
			,#{foodADI.average,
			jdbcType=DOUBLE}
			,#{foodADI.highest,
			jdbcType=DOUBLE}
			,#{foodADI.ageGroup,
			jdbcType=VARCHAR}
			,#{foodADI.type,
			jdbcType=VARCHAR}
			,#{foodADI.typeId, jdbcType=BIGINT}
			,#{foodADI.sortNo,
			jdbcType=INTEGER}
			,#{foodADI.enableFlag,
			jdbcType=VARCHAR}
			,#{foodADI.createBy, jdbcType=VARCHAR}
			,#{foodADI.createTime,
			jdbcType=TIMESTAMP}
			,#{foodADI.updateBy,
			jdbcType=VARCHAR}
			,#{foodADI.updateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateFoodADI" parameterType="com.glaf.heathcare.domain.FoodADI">
		update HEALTH_FOOD_ADI
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="nodeId != null">
				NODEID_ = #{nodeId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION_ = #{description, jdbcType=VARCHAR},
			</if>
			<if test="lowest != null">
				LOWEST_ = #{lowest, jdbcType=DOUBLE},
			</if>
			<if test="average != null">
				AVERAGE_ = #{average, jdbcType=DOUBLE},
			</if>
			<if test="highest != null">
				HIGHEST_ = #{highest, jdbcType=DOUBLE},
			</if>
			<if test="ageGroup != null">
				AGEGROUP_ = #{ageGroup, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="typeId != null">
				TYPEID_ = #{typeId, jdbcType=BIGINT},
			</if>
			<if test="sortNo != null">
				SORTNO_ = #{sortNo, jdbcType=INTEGER},
			</if>
			<if test="enableFlag != null">
				ENABLEFLAG_ = #{enableFlag, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteFoodADIById" parameterType="long">
		delete from
		HEALTH_FOOD_ADI
		where ID_ = #{id}
	</delete>


	<delete id="deleteFoodADIs" parameterType="com.glaf.heathcare.query.FoodADIQuery">
		delete from HEALTH_FOOD_ADI
		where (
		ID_ IN
		<foreach item="x_id" index="index" collection="ids" open="("
			separator="," close=")">
			#{x_id}
		</foreach>
		)
	</delete>


	<select id="getFoodADIById" parameterType="long" resultMap="foodADIResultMap">
		select * from HEALTH_FOOD_ADI where ID_ = #{id}
	</select>


	<select id="getFoodADIs" parameterType="com.glaf.heathcare.query.FoodADIQuery"
		resultMap="foodADIResultMap">
		select distinct E.*
		<include refid="selectFoodADIsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.AGEGROUP_ asc, TYPEID_ asc
			</otherwise>
		</choose>
	</select>


	<select id="getFoodADICount" parameterType="com.glaf.heathcare.query.FoodADIQuery"
		resultType="int">
		select count(*)
		<include refid="selectFoodADIsSql" />
	</select>


	<sql id="selectFoodADIsSql">

		from HEALTH_FOOD_ADI E

		<where>
			1 = 1

			<if test="nodeId != null">
				and E.NODEID_ = #{nodeId}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
			</if>

			<if test="descriptionLike != null and descriptionLike != '' ">
				and E.DESCRIPTION_ like #{descriptionLike}
			</if>

			<if test="lowestGreaterThanOrEqual != null">
				and E.LOWEST_ &gt;= #{lowestGreaterThanOrEqual}
			</if>

			<if test="lowestLessThanOrEqual != null">
				and E.LOWEST_ &lt;= #{lowestLessThanOrEqual}
			</if>

			<if test="averageGreaterThanOrEqual != null">
				and E.AVERAGE_ &gt;= #{averageGreaterThanOrEqual}
			</if>

			<if test="averageLessThanOrEqual != null">
				and E.AVERAGE_ &lt;= #{averageLessThanOrEqual}
			</if>

			<if test="highestGreaterThanOrEqual != null">
				and E.HIGHEST_ &gt;= #{highestGreaterThanOrEqual}
			</if>

			<if test="highestLessThanOrEqual != null">
				and E.HIGHEST_ &lt;= #{highestLessThanOrEqual}
			</if>

			<if test="ageGroup != null and ageGroup != '' ">
				and E.AGEGROUP_ = #{ageGroup}
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="typeLike != null and typeLike != '' ">
				and E.TYPE_ like #{typeLike}
			</if>

			<if test="typeId != null">
				and E.TYPEID_ = #{typeId}
			</if>

			<if test="typeIds != null and typeIds.size() &gt; 0">
				and E.TYPEID_ IN
				<foreach item="x_typeId" index="index" collection="typeIds"
					open="(" separator="," close=")">
					#{x_typeId}
				</foreach>
			</if>

			<if test="enableFlag != null and enableFlag != '' ">
				and E.ENABLEFLAG_ = #{enableFlag}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>
			
			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>